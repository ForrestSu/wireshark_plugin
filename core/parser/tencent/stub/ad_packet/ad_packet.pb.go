// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: ad_packet.proto

package ad_packet

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request2Adaptor_AdReqProtocolType int32

const (
	Request2Adaptor_XML  Request2Adaptor_AdReqProtocolType = 1
	Request2Adaptor_JSON Request2Adaptor_AdReqProtocolType = 2
)

// Enum value maps for Request2Adaptor_AdReqProtocolType.
var (
	Request2Adaptor_AdReqProtocolType_name = map[int32]string{
		1: "XML",
		2: "JSON",
	}
	Request2Adaptor_AdReqProtocolType_value = map[string]int32{
		"XML":  1,
		"JSON": 2,
	}
)

func (x Request2Adaptor_AdReqProtocolType) Enum() *Request2Adaptor_AdReqProtocolType {
	p := new(Request2Adaptor_AdReqProtocolType)
	*p = x
	return p
}

func (x Request2Adaptor_AdReqProtocolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Request2Adaptor_AdReqProtocolType) Descriptor() protoreflect.EnumDescriptor {
	return file_ad_packet_proto_enumTypes[0].Descriptor()
}

func (Request2Adaptor_AdReqProtocolType) Type() protoreflect.EnumType {
	return &file_ad_packet_proto_enumTypes[0]
}

func (x Request2Adaptor_AdReqProtocolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Request2Adaptor_AdReqProtocolType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Request2Adaptor_AdReqProtocolType(num)
	return nil
}

// Deprecated: Use Request2Adaptor_AdReqProtocolType.Descriptor instead.
func (Request2Adaptor_AdReqProtocolType) EnumDescriptor() ([]byte, []int) {
	return file_ad_packet_proto_rawDescGZIP(), []int{0, 0}
}

type ResponseFromAdaptor_AidServerType int32

const (
	ResponseFromAdaptor_MASTER ResponseFromAdaptor_AidServerType = 0
	ResponseFromAdaptor_SLAVE  ResponseFromAdaptor_AidServerType = 1
)

// Enum value maps for ResponseFromAdaptor_AidServerType.
var (
	ResponseFromAdaptor_AidServerType_name = map[int32]string{
		0: "MASTER",
		1: "SLAVE",
	}
	ResponseFromAdaptor_AidServerType_value = map[string]int32{
		"MASTER": 0,
		"SLAVE":  1,
	}
)

func (x ResponseFromAdaptor_AidServerType) Enum() *ResponseFromAdaptor_AidServerType {
	p := new(ResponseFromAdaptor_AidServerType)
	*p = x
	return p
}

func (x ResponseFromAdaptor_AidServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseFromAdaptor_AidServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_ad_packet_proto_enumTypes[1].Descriptor()
}

func (ResponseFromAdaptor_AidServerType) Type() protoreflect.EnumType {
	return &file_ad_packet_proto_enumTypes[1]
}

func (x ResponseFromAdaptor_AidServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ResponseFromAdaptor_AidServerType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ResponseFromAdaptor_AidServerType(num)
	return nil
}

// Deprecated: Use ResponseFromAdaptor_AidServerType.Descriptor instead.
func (ResponseFromAdaptor_AidServerType) EnumDescriptor() ([]byte, []int) {
	return file_ad_packet_proto_rawDescGZIP(), []int{1, 0}
}

type Request2Adaptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies []string `protobuf:"bytes,1,rep,name=cookies" json:"cookies,omitempty"` // 存放cookies
	Params  []string `protobuf:"bytes,2,rep,name=params" json:"params,omitempty"`   // 存放key=value形式的参数信息
	//optional string referer   = 3;  // the Referer
	RawReferer  []byte                             `protobuf:"bytes,4,opt,name=raw_referer,json=rawReferer" json:"raw_referer,omitempty"`                                                      // 替代 string 类型的referer
	ReqProtocol *Request2Adaptor_AdReqProtocolType `protobuf:"varint,5,opt,name=req_protocol,json=reqProtocol,enum=ad_packet.Request2Adaptor_AdReqProtocolType" json:"req_protocol,omitempty"` //透传字段格式
}

func (x *Request2Adaptor) Reset() {
	*x = Request2Adaptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ad_packet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request2Adaptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request2Adaptor) ProtoMessage() {}

func (x *Request2Adaptor) ProtoReflect() protoreflect.Message {
	mi := &file_ad_packet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request2Adaptor.ProtoReflect.Descriptor instead.
func (*Request2Adaptor) Descriptor() ([]byte, []int) {
	return file_ad_packet_proto_rawDescGZIP(), []int{0}
}

func (x *Request2Adaptor) GetCookies() []string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *Request2Adaptor) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Request2Adaptor) GetRawReferer() []byte {
	if x != nil {
		return x.RawReferer
	}
	return nil
}

func (x *Request2Adaptor) GetReqProtocol() Request2Adaptor_AdReqProtocolType {
	if x != nil && x.ReqProtocol != nil {
		return *x.ReqProtocol
	}
	return Request2Adaptor_XML
}

type ResponseFromAdaptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid      *string `protobuf:"bytes,1,opt,name=aid" json:"aid,omitempty"`
	Oaid     *string `protobuf:"bytes,2,opt,name=oaid" json:"oaid,omitempty"`
	Duration *int32  `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"` //视频时长
	Tpid     *int32  `protobuf:"varint,4,opt,name=tpid" json:"tpid,omitempty"`
	Isvip    *int32  `protobuf:"varint,5,opt,name=isvip" json:"isvip,omitempty"`
	Add      *int32  `protobuf:"varint,6,opt,name=add" json:"add,omitempty"`
	// optional int32 breakTime       = 7;
	AdFlag         *int32                             `protobuf:"varint,8,opt,name=adFlag" json:"adFlag,omitempty"`
	StopWatch      *int32                             `protobuf:"varint,9,opt,name=stopWatch" json:"stopWatch,omitempty"` // 秒表/跑表.记adaptor与aid server通讯所有的时长,单位毫秒.
	AidSvrType     *ResponseFromAdaptor_AidServerType `protobuf:"varint,10,opt,name=aidSvrType,enum=ad_packet.ResponseFromAdaptor_AidServerType" json:"aidSvrType,omitempty"`
	AidSvrIP       *uint32                            `protobuf:"varint,11,opt,name=aidSvrIP" json:"aidSvrIP,omitempty"`
	Xml            *string                            `protobuf:"bytes,12,opt,name=xml" json:"xml,omitempty"`
	Int32TransType *int32                             `protobuf:"varint,13,opt,name=int32_trans_type,json=int32TransType,def=0" json:"int32_trans_type,omitempty"`
	VecDotData     []*ResponseFromAdaptor_DotData     `protobuf:"bytes,14,rep,name=vecDotData" json:"vecDotData,omitempty"`     //打点数据
	StSourceData   *ResponseFromAdaptor_SourceData    `protobuf:"bytes,15,opt,name=stSourceData" json:"stSourceData,omitempty"` //视频及用户数据
	//iUserType参数说明
	//100=新增用户,无免广告 101=新增用户,24小时免广告 102=新增用户,48小时免广告
	//103=新增用户,3贴后免广告持续7天 104=新增用户,4贴后免广告持续7天
	//200=次周2天以下,无免广告 201=次周2天以下,24小时免广告 202=次周2天以下,48小时免广告
	//203=次周2天以下,4贴后免广告持续7天 204=次周2天以下,5贴后免广告持续7天
	IUserType         *int32                                `protobuf:"varint,16,opt,name=iUserType" json:"iUserType,omitempty"`
	UllStartTimeStamp *uint64                               `protobuf:"varint,17,opt,name=ullStartTimeStamp" json:"ullStartTimeStamp,omitempty"`                            //用户时间戳 用户新增时间,次周首次活跃时间(待定)
	StrJson           *string                               `protobuf:"bytes,18,opt,name=strJson" json:"strJson,omitempty"`                                                 //json格式的透传字段
	CoverName         *string                               `protobuf:"bytes,19,opt,name=cover_name,json=coverName" json:"cover_name,omitempty"`                            //专辑中文名称
	VideoName         *string                               `protobuf:"bytes,20,opt,name=video_name,json=videoName" json:"video_name,omitempty"`                            //单视频中文名称
	ColumnName        *string                               `protobuf:"bytes,21,opt,name=column_name,json=columnName" json:"column_name,omitempty"`                         //栏目中文名称
	StrVid            *string                               `protobuf:"bytes,22,opt,name=str_vid,json=strVid" json:"str_vid,omitempty"`                                     //vid
	Labels            []uint32                              `protobuf:"varint,23,rep,name=labels" json:"labels,omitempty"`                                                  //请求命中的所有标签
	StAdtypeData      []*ResponseFromAdaptor_AdtypeData     `protobuf:"bytes,24,rep,name=stAdtypeData" json:"stAdtypeData,omitempty"`                                       //分广告位类型的ADID等信息
	StSceneDot        []*ResponseFromAdaptor_SceneDotData   `protobuf:"bytes,25,rep,name=stSceneDot" json:"stSceneDot,omitempty"`                                           //场景点
	Uin               *uint64                               `protobuf:"varint,26,opt,name=uin" json:"uin,omitempty"`                                                        //uin  AidServer向调用者返回用户qq
	ExtraData         *ResponseFromAdaptor_ExtraControlData `protobuf:"bytes,27,opt,name=extraData" json:"extraData,omitempty"`                                             //其他控制参数
	TrytimeSecond     *uint32                               `protobuf:"varint,28,opt,name=trytime_second,json=trytimeSecond" json:"trytime_second,omitempty"`               // 试看时长，单位秒
	TrytimeWithadFlag *uint32                               `protobuf:"varint,29,opt,name=trytime_withad_flag,json=trytimeWithadFlag" json:"trytime_withad_flag,omitempty"` // 试看是否出广告的标记，1为试看出广告，0为其他默认值
	StrTagSource      *string                               `protobuf:"bytes,100,opt,name=strTagSource" json:"strTagSource,omitempty"`                                      //媒资类型泛tag数据来源
}

// Default values for ResponseFromAdaptor fields.
const (
	Default_ResponseFromAdaptor_Int32TransType = int32(0)
)

func (x *ResponseFromAdaptor) Reset() {
	*x = ResponseFromAdaptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ad_packet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseFromAdaptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFromAdaptor) ProtoMessage() {}

func (x *ResponseFromAdaptor) ProtoReflect() protoreflect.Message {
	mi := &file_ad_packet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFromAdaptor.ProtoReflect.Descriptor instead.
func (*ResponseFromAdaptor) Descriptor() ([]byte, []int) {
	return file_ad_packet_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseFromAdaptor) GetAid() string {
	if x != nil && x.Aid != nil {
		return *x.Aid
	}
	return ""
}

func (x *ResponseFromAdaptor) GetOaid() string {
	if x != nil && x.Oaid != nil {
		return *x.Oaid
	}
	return ""
}

func (x *ResponseFromAdaptor) GetDuration() int32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *ResponseFromAdaptor) GetTpid() int32 {
	if x != nil && x.Tpid != nil {
		return *x.Tpid
	}
	return 0
}

func (x *ResponseFromAdaptor) GetIsvip() int32 {
	if x != nil && x.Isvip != nil {
		return *x.Isvip
	}
	return 0
}

func (x *ResponseFromAdaptor) GetAdd() int32 {
	if x != nil && x.Add != nil {
		return *x.Add
	}
	return 0
}

func (x *ResponseFromAdaptor) GetAdFlag() int32 {
	if x != nil && x.AdFlag != nil {
		return *x.AdFlag
	}
	return 0
}

func (x *ResponseFromAdaptor) GetStopWatch() int32 {
	if x != nil && x.StopWatch != nil {
		return *x.StopWatch
	}
	return 0
}

func (x *ResponseFromAdaptor) GetAidSvrType() ResponseFromAdaptor_AidServerType {
	if x != nil && x.AidSvrType != nil {
		return *x.AidSvrType
	}
	return ResponseFromAdaptor_MASTER
}

func (x *ResponseFromAdaptor) GetAidSvrIP() uint32 {
	if x != nil && x.AidSvrIP != nil {
		return *x.AidSvrIP
	}
	return 0
}

func (x *ResponseFromAdaptor) GetXml() string {
	if x != nil && x.Xml != nil {
		return *x.Xml
	}
	return ""
}

func (x *ResponseFromAdaptor) GetInt32TransType() int32 {
	if x != nil && x.Int32TransType != nil {
		return *x.Int32TransType
	}
	return Default_ResponseFromAdaptor_Int32TransType
}

func (x *ResponseFromAdaptor) GetVecDotData() []*ResponseFromAdaptor_DotData {
	if x != nil {
		return x.VecDotData
	}
	return nil
}

func (x *ResponseFromAdaptor) GetStSourceData() *ResponseFromAdaptor_SourceData {
	if x != nil {
		return x.StSourceData
	}
	return nil
}

func (x *ResponseFromAdaptor) GetIUserType() int32 {
	if x != nil && x.IUserType != nil {
		return *x.IUserType
	}
	return 0
}

func (x *ResponseFromAdaptor) GetUllStartTimeStamp() uint64 {
	if x != nil && x.UllStartTimeStamp != nil {
		return *x.UllStartTimeStamp
	}
	return 0
}

func (x *ResponseFromAdaptor) GetStrJson() string {
	if x != nil && x.StrJson != nil {
		return *x.StrJson
	}
	return ""
}

func (x *ResponseFromAdaptor) GetCoverName() string {
	if x != nil && x.CoverName != nil {
		return *x.CoverName
	}
	return ""
}

func (x *ResponseFromAdaptor) GetVideoName() string {
	if x != nil && x.VideoName != nil {
		return *x.VideoName
	}
	return ""
}

func (x *ResponseFromAdaptor) GetColumnName() string {
	if x != nil && x.ColumnName != nil {
		return *x.ColumnName
	}
	return ""
}

func (x *ResponseFromAdaptor) GetStrVid() string {
	if x != nil && x.StrVid != nil {
		return *x.StrVid
	}
	return ""
}

func (x *ResponseFromAdaptor) GetLabels() []uint32 {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ResponseFromAdaptor) GetStAdtypeData() []*ResponseFromAdaptor_AdtypeData {
	if x != nil {
		return x.StAdtypeData
	}
	return nil
}

func (x *ResponseFromAdaptor) GetStSceneDot() []*ResponseFromAdaptor_SceneDotData {
	if x != nil {
		return x.StSceneDot
	}
	return nil
}

func (x *ResponseFromAdaptor) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *ResponseFromAdaptor) GetExtraData() *ResponseFromAdaptor_ExtraControlData {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *ResponseFromAdaptor) GetTrytimeSecond() uint32 {
	if x != nil && x.TrytimeSecond != nil {
		return *x.TrytimeSecond
	}
	return 0
}

func (x *ResponseFromAdaptor) GetTrytimeWithadFlag() uint32 {
	if x != nil && x.TrytimeWithadFlag != nil {
		return *x.TrytimeWithadFlag
	}
	return 0
}

func (x *ResponseFromAdaptor) GetStrTagSource() string {
	if x != nil && x.StrTagSource != nil {
		return *x.StrTagSource
	}
	return ""
}

type ResponseFromAdaptor_DotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IFlag    *int32  `protobuf:"varint,1,opt,name=iFlag" json:"iFlag,omitempty"`       //打点数据类型
	UiTime   *uint32 `protobuf:"varint,2,opt,name=uiTime" json:"uiTime,omitempty"`     //打点数据时间点
	IProduct *int32  `protobuf:"varint,3,opt,name=iProduct" json:"iProduct,omitempty"` //iFlag=3表示商品id(边看变买)
	IAnchor  *int32  `protobuf:"varint,4,opt,name=iAnchor" json:"iAnchor,omitempty"`   //是否有锚点
	IPosX    *int32  `protobuf:"varint,5,opt,name=iPosX" json:"iPosX,omitempty"`       //锚点x值
	IPosY    *int32  `protobuf:"varint,6,opt,name=iPosY" json:"iPosY,omitempty"`       //锚点y值
}

func (x *ResponseFromAdaptor_DotData) Reset() {
	*x = ResponseFromAdaptor_DotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ad_packet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseFromAdaptor_DotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFromAdaptor_DotData) ProtoMessage() {}

func (x *ResponseFromAdaptor_DotData) ProtoReflect() protoreflect.Message {
	mi := &file_ad_packet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFromAdaptor_DotData.ProtoReflect.Descriptor instead.
func (*ResponseFromAdaptor_DotData) Descriptor() ([]byte, []int) {
	return file_ad_packet_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ResponseFromAdaptor_DotData) GetIFlag() int32 {
	if x != nil && x.IFlag != nil {
		return *x.IFlag
	}
	return 0
}

func (x *ResponseFromAdaptor_DotData) GetUiTime() uint32 {
	if x != nil && x.UiTime != nil {
		return *x.UiTime
	}
	return 0
}

func (x *ResponseFromAdaptor_DotData) GetIProduct() int32 {
	if x != nil && x.IProduct != nil {
		return *x.IProduct
	}
	return 0
}

func (x *ResponseFromAdaptor_DotData) GetIAnchor() int32 {
	if x != nil && x.IAnchor != nil {
		return *x.IAnchor
	}
	return 0
}

func (x *ResponseFromAdaptor_DotData) GetIPosX() int32 {
	if x != nil && x.IPosX != nil {
		return *x.IPosX
	}
	return 0
}

func (x *ResponseFromAdaptor_DotData) GetIPosY() int32 {
	if x != nil && x.IPosY != nil {
		return *x.IPosY
	}
	return 0
}

type ResponseFromAdaptor_SourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ISourceIdType *int32  `protobuf:"varint,1,opt,name=iSourceIdType" json:"iSourceIdType,omitempty"` // id分类 1直播(pid) 2点播(vid) 3直播(sid)<sid转pid失败时>
	StrSourceId   *string `protobuf:"bytes,2,opt,name=strSourceId" json:"strSourceId,omitempty"`      // vid/pid/sid
	IUserTypeReq  *int32  `protobuf:"varint,3,opt,name=iUserTypeReq" json:"iUserTypeReq,omitempty"`   // 请求的用户身份(pu参数) -1=未知 0=未登录 1=登陆 2=好莱坞 4=qqvip 5=qqsvip 7=绿钻 8=15个会员 9=tv会员 10=体育会员
	IVipInfoRsp   *int32  `protobuf:"varint,4,opt,name=iVipInfoRsp" json:"iVipInfoRsp,omitempty"`     // 校验后的会员身份                      1=非会员 2=好莱坞 4=qqvip 5=qqsvip 7=绿钻 8=15个会员 9=tv会员 10=体育会员
	IVideoType    *int32  `protobuf:"varint,5,opt,name=iVideoType" json:"iVideoType,omitempty"`       // 视频分类     -1未知 4体育直播
	IPayFlag      *int32  `protobuf:"varint,6,opt,name=iPayFlag" json:"iPayFlag,omitempty"`           // 付费类型     -1未知 0免费 1付费
	ICheckLogin   *int32  `protobuf:"varint,7,opt,name=iCheckLogin" json:"iCheckLogin,omitempty"`     // 校验登录态   0=未校验登录态 1=未登录 2=登录校验成功 3=登录态失效 4=登录校验失败
	ICheckUser    *int32  `protobuf:"varint,8,opt,name=iCheckUser" json:"iCheckUser,omitempty"`       // 校验用户身份 1=不是会员 2=是会员 3=获取用户身份失败
}

func (x *ResponseFromAdaptor_SourceData) Reset() {
	*x = ResponseFromAdaptor_SourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ad_packet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseFromAdaptor_SourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFromAdaptor_SourceData) ProtoMessage() {}

func (x *ResponseFromAdaptor_SourceData) ProtoReflect() protoreflect.Message {
	mi := &file_ad_packet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFromAdaptor_SourceData.ProtoReflect.Descriptor instead.
func (*ResponseFromAdaptor_SourceData) Descriptor() ([]byte, []int) {
	return file_ad_packet_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ResponseFromAdaptor_SourceData) GetISourceIdType() int32 {
	if x != nil && x.ISourceIdType != nil {
		return *x.ISourceIdType
	}
	return 0
}

func (x *ResponseFromAdaptor_SourceData) GetStrSourceId() string {
	if x != nil && x.StrSourceId != nil {
		return *x.StrSourceId
	}
	return ""
}

func (x *ResponseFromAdaptor_SourceData) GetIUserTypeReq() int32 {
	if x != nil && x.IUserTypeReq != nil {
		return *x.IUserTypeReq
	}
	return 0
}

func (x *ResponseFromAdaptor_SourceData) GetIVipInfoRsp() int32 {
	if x != nil && x.IVipInfoRsp != nil {
		return *x.IVipInfoRsp
	}
	return 0
}

func (x *ResponseFromAdaptor_SourceData) GetIVideoType() int32 {
	if x != nil && x.IVideoType != nil {
		return *x.IVideoType
	}
	return 0
}

func (x *ResponseFromAdaptor_SourceData) GetIPayFlag() int32 {
	if x != nil && x.IPayFlag != nil {
		return *x.IPayFlag
	}
	return 0
}

func (x *ResponseFromAdaptor_SourceData) GetICheckLogin() int32 {
	if x != nil && x.ICheckLogin != nil {
		return *x.ICheckLogin
	}
	return 0
}

func (x *ResponseFromAdaptor_SourceData) GetICheckUser() int32 {
	if x != nil && x.ICheckUser != nil {
		return *x.ICheckUser
	}
	return 0
}

type ResponseFromAdaptor_AdtypeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrAdtype *string `protobuf:"bytes,1,opt,name=str_adtype,json=strAdtype" json:"str_adtype,omitempty"` //广告位类型
	StrAdid   *string `protobuf:"bytes,2,opt,name=str_adid,json=strAdid" json:"str_adid,omitempty"`       //ADID
}

func (x *ResponseFromAdaptor_AdtypeData) Reset() {
	*x = ResponseFromAdaptor_AdtypeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ad_packet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseFromAdaptor_AdtypeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFromAdaptor_AdtypeData) ProtoMessage() {}

func (x *ResponseFromAdaptor_AdtypeData) ProtoReflect() protoreflect.Message {
	mi := &file_ad_packet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFromAdaptor_AdtypeData.ProtoReflect.Descriptor instead.
func (*ResponseFromAdaptor_AdtypeData) Descriptor() ([]byte, []int) {
	return file_ad_packet_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ResponseFromAdaptor_AdtypeData) GetStrAdtype() string {
	if x != nil && x.StrAdtype != nil {
		return *x.StrAdtype
	}
	return ""
}

func (x *ResponseFromAdaptor_AdtypeData) GetStrAdid() string {
	if x != nil && x.StrAdid != nil {
		return *x.StrAdid
	}
	return ""
}

type ResponseFromAdaptor_SceneDotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID        *uint32  `protobuf:"varint,1,opt,name=uID" json:"uID,omitempty"`               //场景点唯一ID
	UTime      *uint32  `protobuf:"varint,2,opt,name=uTime" json:"uTime,omitempty"`           //打点时刻
	USceneType []uint32 `protobuf:"varint,3,rep,name=uSceneType" json:"uSceneType,omitempty"` //场景类型
	UPackId    []uint32 `protobuf:"varint,5,rep,name=uPackId" json:"uPackId,omitempty"`       //场景点对应的包ID
}

func (x *ResponseFromAdaptor_SceneDotData) Reset() {
	*x = ResponseFromAdaptor_SceneDotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ad_packet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseFromAdaptor_SceneDotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFromAdaptor_SceneDotData) ProtoMessage() {}

func (x *ResponseFromAdaptor_SceneDotData) ProtoReflect() protoreflect.Message {
	mi := &file_ad_packet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFromAdaptor_SceneDotData.ProtoReflect.Descriptor instead.
func (*ResponseFromAdaptor_SceneDotData) Descriptor() ([]byte, []int) {
	return file_ad_packet_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ResponseFromAdaptor_SceneDotData) GetUID() uint32 {
	if x != nil && x.UID != nil {
		return *x.UID
	}
	return 0
}

func (x *ResponseFromAdaptor_SceneDotData) GetUTime() uint32 {
	if x != nil && x.UTime != nil {
		return *x.UTime
	}
	return 0
}

func (x *ResponseFromAdaptor_SceneDotData) GetUSceneType() []uint32 {
	if x != nil {
		return x.USceneType
	}
	return nil
}

func (x *ResponseFromAdaptor_SceneDotData) GetUPackId() []uint32 {
	if x != nil {
		return x.UPackId
	}
	return nil
}

type ResponseFromAdaptor_ExtraControlData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TvAdFreeFlag *int32 `protobuf:"varint,1,opt,name=tvAdFreeFlag" json:"tvAdFreeFlag,omitempty"` //0:其他，1: 用户登录免广告  2: 用户未登录可参与登录免广告
}

func (x *ResponseFromAdaptor_ExtraControlData) Reset() {
	*x = ResponseFromAdaptor_ExtraControlData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ad_packet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseFromAdaptor_ExtraControlData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFromAdaptor_ExtraControlData) ProtoMessage() {}

func (x *ResponseFromAdaptor_ExtraControlData) ProtoReflect() protoreflect.Message {
	mi := &file_ad_packet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFromAdaptor_ExtraControlData.ProtoReflect.Descriptor instead.
func (*ResponseFromAdaptor_ExtraControlData) Descriptor() ([]byte, []int) {
	return file_ad_packet_proto_rawDescGZIP(), []int{1, 4}
}

func (x *ResponseFromAdaptor_ExtraControlData) GetTvAdFreeFlag() int32 {
	if x != nil && x.TvAdFreeFlag != nil {
		return *x.TvAdFreeFlag
	}
	return 0
}

var File_ad_packet_proto protoreflect.FileDescriptor

var file_ad_packet_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0xdd, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x64, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x41, 0x64,
	0x61, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x52, 0x65, 0x71, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x26, 0x0a, 0x11, 0x41, 0x64, 0x52, 0x65, 0x71, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x4d, 0x4c,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x02, 0x22, 0xc8, 0x0e, 0x0a,
	0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x61, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x70, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x76, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x76, 0x69, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61,
	0x64, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x70, 0x57, 0x61, 0x74, 0x63, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x70, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x4c, 0x0a, 0x0a, 0x61, 0x69, 0x64, 0x53,
	0x76, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61,
	0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x69, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x69, 0x64, 0x53,
	0x76, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x69, 0x64, 0x53, 0x76, 0x72,
	0x49, 0x50, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x69, 0x64, 0x53, 0x76, 0x72,
	0x49, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x6d, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x78, 0x6d, 0x6c, 0x12, 0x2b, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01,
	0x30, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x46, 0x0a, 0x0a, 0x76, 0x65, 0x63, 0x44, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64,
	0x61, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x76,
	0x65, 0x63, 0x44, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x0c, 0x73, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x73, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x4a, 0x73, 0x6f, 0x6e, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x74, 0x72, 0x5f, 0x76, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x56, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x17, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4d,
	0x0a, 0x0c, 0x73, 0x74, 0x41, 0x64, 0x74, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x18,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x74, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0c, 0x73, 0x74, 0x41, 0x64, 0x74, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a,
	0x0a, 0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x6f, 0x74, 0x18, 0x19, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x4d, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x72, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x61, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x74, 0x72, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x74, 0x68, 0x61, 0x64, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x54, 0x61, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x54, 0x61, 0x67,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x99, 0x01, 0x0a, 0x07, 0x44, 0x6f, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x69, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x69, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69,
	0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x50, 0x6f, 0x73, 0x58, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x50, 0x6f, 0x73, 0x58, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x50, 0x6f, 0x73, 0x59, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x50, 0x6f,
	0x73, 0x59, 0x1a, 0x98, 0x02, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x69, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x69, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x50, 0x61, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x69, 0x50, 0x61, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x69, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x69, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x46, 0x0a,
	0x0a, 0x41, 0x64, 0x74, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x72, 0x5f, 0x61, 0x64, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x72, 0x41, 0x64, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x72, 0x5f, 0x61, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x72, 0x41, 0x64, 0x69, 0x64, 0x1a, 0x70, 0x0a, 0x0c, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x6f,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x75, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07,
	0x75, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x1a, 0x36, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x76, 0x41, 0x64, 0x46, 0x72, 0x65, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x74, 0x76, 0x41, 0x64, 0x46, 0x72, 0x65, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x22,
	0x26, 0x0a, 0x0d, 0x41, 0x69, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x53, 0x4c, 0x41, 0x56, 0x45, 0x10, 0x01, 0x32, 0x53, 0x0a, 0x0c, 0x61, 0x69, 0x64, 0x5f, 0x66,
	0x72, 0x65, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x12, 0x43, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x1a, 0x2e, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x32, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x1a, 0x1e, 0x2e, 0x61,
	0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x42, 0x0d, 0x5a, 0x0b,
	0x2e, 0x3b, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
}

var (
	file_ad_packet_proto_rawDescOnce sync.Once
	file_ad_packet_proto_rawDescData = file_ad_packet_proto_rawDesc
)

func file_ad_packet_proto_rawDescGZIP() []byte {
	file_ad_packet_proto_rawDescOnce.Do(func() {
		file_ad_packet_proto_rawDescData = protoimpl.X.CompressGZIP(file_ad_packet_proto_rawDescData)
	})
	return file_ad_packet_proto_rawDescData
}

var file_ad_packet_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ad_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ad_packet_proto_goTypes = []interface{}{
	(Request2Adaptor_AdReqProtocolType)(0),       // 0: ad_packet.Request2Adaptor.AdReqProtocolType
	(ResponseFromAdaptor_AidServerType)(0),       // 1: ad_packet.ResponseFromAdaptor.AidServerType
	(*Request2Adaptor)(nil),                      // 2: ad_packet.Request2Adaptor
	(*ResponseFromAdaptor)(nil),                  // 3: ad_packet.ResponseFromAdaptor
	(*ResponseFromAdaptor_DotData)(nil),          // 4: ad_packet.ResponseFromAdaptor.DotData
	(*ResponseFromAdaptor_SourceData)(nil),       // 5: ad_packet.ResponseFromAdaptor.SourceData
	(*ResponseFromAdaptor_AdtypeData)(nil),       // 6: ad_packet.ResponseFromAdaptor.AdtypeData
	(*ResponseFromAdaptor_SceneDotData)(nil),     // 7: ad_packet.ResponseFromAdaptor.SceneDotData
	(*ResponseFromAdaptor_ExtraControlData)(nil), // 8: ad_packet.ResponseFromAdaptor.ExtraControlData
}
var file_ad_packet_proto_depIdxs = []int32{
	0, // 0: ad_packet.Request2Adaptor.req_protocol:type_name -> ad_packet.Request2Adaptor.AdReqProtocolType
	1, // 1: ad_packet.ResponseFromAdaptor.aidSvrType:type_name -> ad_packet.ResponseFromAdaptor.AidServerType
	4, // 2: ad_packet.ResponseFromAdaptor.vecDotData:type_name -> ad_packet.ResponseFromAdaptor.DotData
	5, // 3: ad_packet.ResponseFromAdaptor.stSourceData:type_name -> ad_packet.ResponseFromAdaptor.SourceData
	6, // 4: ad_packet.ResponseFromAdaptor.stAdtypeData:type_name -> ad_packet.ResponseFromAdaptor.AdtypeData
	7, // 5: ad_packet.ResponseFromAdaptor.stSceneDot:type_name -> ad_packet.ResponseFromAdaptor.SceneDotData
	8, // 6: ad_packet.ResponseFromAdaptor.extraData:type_name -> ad_packet.ResponseFromAdaptor.ExtraControlData
	2, // 7: ad_packet.aid_free_sys.Query:input_type -> ad_packet.Request2Adaptor
	3, // 8: ad_packet.aid_free_sys.Query:output_type -> ad_packet.ResponseFromAdaptor
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_ad_packet_proto_init() }
func file_ad_packet_proto_init() {
	if File_ad_packet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ad_packet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request2Adaptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ad_packet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseFromAdaptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ad_packet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseFromAdaptor_DotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ad_packet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseFromAdaptor_SourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ad_packet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseFromAdaptor_AdtypeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ad_packet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseFromAdaptor_SceneDotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ad_packet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseFromAdaptor_ExtraControlData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ad_packet_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ad_packet_proto_goTypes,
		DependencyIndexes: file_ad_packet_proto_depIdxs,
		EnumInfos:         file_ad_packet_proto_enumTypes,
		MessageInfos:      file_ad_packet_proto_msgTypes,
	}.Build()
	File_ad_packet_proto = out.File
	file_ad_packet_proto_rawDesc = nil
	file_ad_packet_proto_goTypes = nil
	file_ad_packet_proto_depIdxs = nil
}
